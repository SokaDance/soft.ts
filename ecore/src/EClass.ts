// Code generated by soft.generator.ts. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2024 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

import { EAttribute, EClassifier, EList, EOperation, EReference, EStructuralFeature } from "./internal.js"

export interface EClass extends EClassifier {
    // Attributes
    isAbstract(): boolean
    setAbstract(newIsAbstract: boolean): void

    isInterface(): boolean
    setInterface(newIsInterface: boolean): void

    // References
    getEStructuralFeatures(): EList<EStructuralFeature>

    getEAttributes(): EList<EAttribute>

    getEReferences(): EList<EReference>

    getESuperTypes(): EList<EClass>

    getEOperations(): EList<EOperation>

    getEContainmentFeatures(): EList<EStructuralFeature>

    getECrossReferenceFeatures(): EList<EStructuralFeature>

    getEAllAttributes(): EList<EAttribute>

    getEAllReferences(): EList<EReference>

    getEAllContainments(): EList<EReference>

    getEAllCrossReferences(): EList<EReference>

    getEAllOperations(): EList<EOperation>

    getEAllStructuralFeatures(): EList<EStructuralFeature>

    getEAllSuperTypes(): EList<EClass>

    getEIDAttribute(): EAttribute

    // Operations
    isSuperTypeOf(someClass: EClass): boolean
    getFeatureCount(): number
    getEStructuralFeature(featureID: number): EStructuralFeature
    getEStructuralFeatureFromName(featureName: string): EStructuralFeature
    getFeatureID(feature: EStructuralFeature): number
    getOperationCount(): number
    getEOperation(operationID: number): EOperation
    getOperationID(operation: EOperation): number
    getOverride(operation: EOperation): EOperation
    getFeatureType(feature: EStructuralFeature): EClassifier
}
