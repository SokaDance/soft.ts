// Code generated by soft.generator.ts. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2024 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

import { describe, expect, test } from "vitest"
import { anything, capture, instance, mock, reset, verify, when } from "ts-mockito"
import * as ecore from "@masagroup/ecore"
import { EmptyConstants, EmptyFactory, EmptyFactoryImpl } from "./internal.js"

describe("EmptyFactoryImpl", () => {
    test("createFromEClass", () => {
        let factory = EmptyFactoryImpl.getInstance()
        {
            let mockEClass = mock<ecore.EClass>()
            let eClass = instance(mockEClass)
            when(mockEClass.classifierID).thenReturn(-1)
            expect(() => factory.create(eClass)).toThrow(Error)
        }
    })

    test("createFromStringInvalid", () => {
        let mockDataType = mock<ecore.EDataType>()
        let eDataType = instance(mockDataType)
        when(mockDataType.classifierID).thenReturn(-1)
        expect(() => EmptyFactoryImpl.getInstance().createFromString(eDataType, "")).toThrow(Error)
    })
    test("convertToStringInvalid", () => {
        let mockDataType = mock<ecore.EDataType>()
        let eDataType = instance(mockDataType)
        when(mockDataType.classifierID).thenReturn(-1)
        expect(() => EmptyFactoryImpl.getInstance().convertToString(eDataType, null)).toThrow(Error)
    })
})
